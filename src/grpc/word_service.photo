syntax = "proto3";

package example;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

// The service definition
service WordService {
  rpc GetWordsByUser (GetWordsByUserRequest) returns (GetWordsByUserResponse);
  rpc AddNewWordFromDTO (AddNewWordRequest) returns (AddNewWordResponse);
  rpc AddNewWord (AddNewWordRequest) returns (AddNewWordResponse);
}

// Enum definitions
enum LevelEnum {
  A1 = 0;
  A2 = 1;
  B1 = 2;
  B2 = 3;
  C1 = 4;
  C2 = 5;
}

enum WordTypeEnum {
  STANDARD = 0;
  CUSTOM = 1;
  TEST = 2;
  OTHER = 3;
}

// Message definitions
message WordGetDTO {
  string user_id = 1; // UUID represented as string
  string german_word = 2;
  string english_word = 3;
  string russian_word = 4;
  int32 amount_already_know = 5;
  int32 amount_back_to_learning = 6;
  string lang_level_id = 7; // UUID represented as string
  string word_type_id = 8;  // UUID represented as string
  string group_id = 9;      // UUID represented as string
}

message WordAddDTO {
  string user_id = 1; // UUID represented as string
  string german_word = 2;
  string english_word = 3;
  string russian_word = 4;
  int32 amount_already_know = 5;
  int32 amount_back_to_learning = 6;
  string lang_level_id = 7; // UUID represented as string
  string word_type_id = 8;  // UUID represented as string
  string group_id = 9;      // UUID represented as string
}

// Request and response messages for methods
message GetWordsByUserRequest {
  string user_id = 1; // UUID represented as string
  int32 training_length = 2;
}

message GetWordsByUserResponse {
  repeated WordGetDTO words = 1;
}

message AddNewWordRequest {
  WordAddDTO word = 1;
}

message AddNewWordResponse {
  // No fields required for response, can be empty or include metadata
}
